version: '1.0'

services:
  lottery_reverse_proxy:
    image: traefik:v2.10
    container_name: lottery_reverse_proxy
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.api.address=:${API_SERVER_PORT}
      - --entrypoints.crawler.address=:${CRAWLER_SERVER_PORT}
    ports:
      - '${API_SERVER_PORT}:${API_SERVER_PORT}'
      - '${CRAWLER_SERVER_PORT}:${CRAWLER_SERVER_PORT}'
      - '8080:8080'
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lottery_net_default

  lottery_api_server:
    image: jh8459/lottery_api_server:latest
    container_name: lottery_api_server
    platform: linux/amd64
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api/logs:/api/logs
      - ./api/public:/api/public
      - ./api/resource:/api/resource
    env_file:
      - ./api/.env
    environment:
      - TZ=Asia/Seoul
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
    labels:
      - traefik.enable=true
      - traefik.http.routers.lottery_api_server.rule=Host(`lottery-api.jh8459.com`) || Host(`localhost`)
      - traefik.http.routers.lottery_api_server.service=lottery_api_server
      - traefik.http.services.lottery_api_server.loadbalancer.server.port=${API_SERVER_PORT}
      - traefik.http.routers.lottery_api_server.entrypoints=api
      - traefik.http.services.lottery_api_server.loadbalancer.healthcheck.path=/health
      - traefik.http.services.lottery_api_server.loadbalancer.healthcheck.interval=11s
      - traefik.http.services.lottery_api_server.loadbalancer.healthcheck.timeout=1s
      - traefik.docker.network=lottery_net_default
    networks:
      - lottery_net_default
    depends_on:
      - lottery_reverse_proxy
      - lottery_redis

  lottery_crawler_server:
    image: jh8459/lottery_crawler_server:latest
    container_name: lottery_crawler_server
    platform: linux/amd64
    build:
      context: ./crawler
      dockerfile: Dockerfile
    volumes:
      - ./crawler/logs:/crawler/logs
      - ./crawler/public:/crawler/public
      - ./crawler/resource:/crawler/resource
    env_file:
      - ./crawler/.env
    environment:
      - TZ=Asia/Seoul
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
    labels:
      - traefik.enable=true
      - traefik.http.routers.lottery_crawler_server.rule=Host(`lottery-crawler.jh8459.com`) || Host(`localhost`)
      - traefik.http.routers.lottery_crawler_server.service=lottery_crawler_server
      - traefik.http.services.lottery_crawler_server.loadbalancer.server.port=${CRAWLER_SERVER_PORT}
      - traefik.http.routers.lottery_crawler_server.entrypoints=crawler
      - traefik.http.services.lottery_crawler_server.loadbalancer.healthcheck.path=/health
      - traefik.http.services.lottery_crawler_server.loadbalancer.healthcheck.interval=11s
      - traefik.http.services.lottery_crawler_server.loadbalancer.healthcheck.timeout=1s
      - traefik.docker.network=lottery_net_default
    networks:
      - lottery_net_default
    depends_on:
      - lottery_reverse_proxy
      - lottery_redis

  lottery_redis:
    image: redis:latest
    container_name: lottery_redis
    restart: always
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lottery_net_default

networks:
  lottery_net_default:
    driver: bridge

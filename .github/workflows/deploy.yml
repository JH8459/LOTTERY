name: master branch CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deploy:
    name: CI/CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and push API
      - name: Build and Push lottery_api_server Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lottery_api_server:latest ./api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/lottery_api_server:latest

      # Build and push Crawler
      - name: Build and Push lottery_crawler_server Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lottery_crawler_server:latest ./crawler
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/lottery_crawler_server:latest

      # Build and push Website
      - name: Build and Push lottery_website Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lottery_website:latest ./website
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/lottery_website:latest

      # # Remote deploy
      # - name: SSH to EC2 and deploy
      #   uses: appleboy/ssh-action@v0.1.6
      #   with:
      #     host: ${{ secrets.REMOTE_IP }}
      #     username: ${{ secrets.REMOTE_USER }}
      #     key: ${{ secrets.SECRET_KEY }}
      #     port: ${{ secrets.REMOTE_PORT }}
      #     script: |
      #       echo "############# CREATE .ENV FILES #############"
      #       cd /home/ubuntu/LOTTERY

      #       echo "NODE_ENV=${{ secrets.NODE_ENV }}" > .env
      #       echo "API_SERVER_PORT=${{ secrets.API_SERVER_PORT }}" >> .env
      #       echo "CRAWLER_SERVER_PORT=${{ secrets.CRAWLER_SERVER_PORT }}" >> .env
      #       echo "WEBSITE_PORT=${{ secrets.WEBSITE_PORT }}" >> .env

      #       cd ./crawler
      #       echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
      #       echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
      #       echo "DB_USER=${{ secrets.DB_USER }}" >> .env
      #       echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      #       echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
      #       echo "CRAWLER_SERVER_PORT=${{ secrets.CRAWLER_SERVER_PORT }}" >> .env
      #       echo "COMMON_GITHUB_TOKEN=${{ secrets.COMMON_GITHUB_TOKEN }}" >> .env

      #       cd ../api
      #       echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
      #       echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
      #       echo "DB_USER=${{ secrets.DB_USER }}" >> .env
      #       echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      #       echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
      #       echo "API_NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
      #       echo "API_SERVER_PORT=${{ secrets.API_SERVER_PORT }}" >> .env
      #       echo "API_EMAIL_USERNAME=${{ secrets.API_EMAIL_USERNAME }}" >> .env
      #       echo "API_EMAIL_PASSWORD=${{ secrets.API_EMAIL_PASSWORD }}" >> .env
      #       echo "API_EMAIL_HOST=${{ secrets.API_EMAIL_HOST }}" >> .env
      #       echo "API_EMAIL_PORT=${{ secrets.API_EMAIL_PORT }}" >> .env
      #       echo "API_EMAIL_FROM=${{ secrets.API_EMAIL_FROM }}" >> .env
      #       echo "API_REDIS_HOST=${{ secrets.API_REDIS_HOST }}" >> .env
      #       echo "API_REDIS_PORT=${{ secrets.API_REDIS_PORT }}" >> .env
      #       echo "API_SLACK_SIGNING_SECRET=${{ secrets.API_SLACK_SIGNING_SECRET }}" >> .env
      #       echo "API_SLACK_BOT_TOKEN=${{ secrets.API_SLACK_BOT_TOKEN }}" >> .env
      #       echo "API_SLACK_CLIENT_ID=${{ secrets.API_SLACK_CLIENT_ID }}" >> .env
      #       echo "API_SLACK_CLIENT_SECRET=${{ secrets.API_SLACK_CLIENT_SECRET }}" >> .env
      #       echo "COMMON_GITHUB_TOKEN=${{ secrets.COMMON_GITHUB_TOKEN }}" >> .env
      #       echo "SWAGGER_USERNAME=${{ secrets.SWAGGER_USERNAME }}" >> .env
      #       echo "SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }}" >> .env

      #       echo "############# PULL LATEST IMAGES & REDEPLOY #############"
      #       cd /home/ubuntu/LOTTERY
      #       docker-compose pull
      #       docker-compose down
      #       docker-compose up -d

name: Deploy to NAS (CD)

on:
  pull_request:
    branches: [prod]

jobs:
  deploy:
    name: Deploy to NAS
    runs-on: ubuntu-latest

    steps:
      - name: Connect to NAS via SSH and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.NAS_HOST }}
          username: ${{ secrets.NAS_USER }}
          password: ${{ secrets.NAS_PASSWORD }}
          port: ${{ secrets.NAS_PORT }}
          script: |
            echo "‚úÖ NAS Ï†ëÏÜç ÏÑ±Í≥µ"

            cd /volume1/docker/lottery

            echo "üì¶ COMMON .env ÏÉùÏÑ±"
            [ -f .env ] && rm .env
            cat <<EOF > .env
            NODE_ENV=${{ secrets.NODE_ENV }}
            API_SERVER_PORT=${{ secrets.API_SERVER_PORT }}
            CRAWLER_SERVER_PORT=${{ secrets.CRAWLER_SERVER_PORT }}
            WEBSITE_PORT=${{ secrets.WEBSITE_PORT }}
            EOF

            echo "üì¶ API .env ÏÉùÏÑ±"
            mkdir -p ./api
            [ -f ./api/.env ] && rm ./api/.env
            cat <<EOF > ./api/.env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            API_NODE_ENV=${{ secrets.API_NODE_ENV }}
            API_SERVER_PORT=${{ secrets.API_SERVER_PORT }}
            API_EMAIL_USERNAME=${{ secrets.API_EMAIL_USERNAME }}
            API_EMAIL_PASSWORD=${{ secrets.API_EMAIL_PASSWORD }}
            API_EMAIL_HOST=${{ secrets.API_EMAIL_HOST }}
            API_EMAIL_PORT=${{ secrets.API_EMAIL_PORT }}
            API_EMAIL_FROM=${{ secrets.API_EMAIL_FROM }}
            API_REDIS_HOST=${{ secrets.API_REDIS_HOST }}
            API_REDIS_PORT=${{ secrets.API_REDIS_PORT }}
            API_SLACK_SIGNING_SECRET=${{ secrets.API_SLACK_SIGNING_SECRET }}
            API_SLACK_BOT_TOKEN=${{ secrets.API_SLACK_BOT_TOKEN }}
            API_SLACK_CLIENT_ID=${{ secrets.API_SLACK_CLIENT_ID }}
            API_SLACK_CLIENT_SECRET=${{ secrets.API_SLACK_CLIENT_SECRET }}
            COMMON_GITHUB_TOKEN=${{ secrets.COMMON_GITHUB_TOKEN }}
            SWAGGER_USERNAME=${{ secrets.SWAGGER_USERNAME }}
            SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }}
            EOF

            echo "üì¶ CRAWLER .env ÏÉùÏÑ±"
            mkdir -p ./crawler
            [ -f ./crawler/.env ] && rm ./crawler/.env
            cat <<EOF > ./crawler/.env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            CRAWLER_SERVER_PORT=${{ secrets.CRAWLER_SERVER_PORT }}
            COMMON_GITHUB_TOKEN=${{ secrets.COMMON_GITHUB_TOKEN }}
            EOF

            echo "üåÄ GitHub prod Î∏åÎûúÏπò ÏΩîÎìú ÏµúÏã†Ìôî"
            git fetch origin
            git reset --hard origin/prod

            echo "üê≥ Docker Ïù¥ÎØ∏ÏßÄ Pull"
            /usr/local/bin/docker-compose pull

            echo "üß® Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ï§ëÏßÄ"
            /usr/local/bin/docker-compose down

            echo "üöÄ ÏµúÏã† Ïù¥ÎØ∏ÏßÄÎ°ú Ïª®ÌÖåÏù¥ÎÑà Ïû¨ÏãúÏûë"
            /usr/local/bin/docker-compose up -d

            echo "‚úÖ Î∞∞Ìè¨ ÏôÑÎ£å üéâ"
